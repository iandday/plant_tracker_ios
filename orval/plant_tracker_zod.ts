/**
 * Generated by orval v6.31.0 üç∫
 * Do not edit manually.
 * Plant Tracker API
 * API for interacting with the Plant Tracker application
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod'


/**
 * Location
 * @summary List Locations
 */
export const trackerApiViewLocationListLocationsResponseUserEmailMax = 254;
export const trackerApiViewLocationListLocationsResponseUserFirstNameMax = 255;
export const trackerApiViewLocationListLocationsResponseUserLastNameMax = 255;


export const trackerApiViewLocationListLocationsResponseItem = zod.object({
  "name": zod.string(),
  "id": zod.string(),
  "user": zod.object({
  "email": zod.string().max(trackerApiViewLocationListLocationsResponseUserEmailMax),
  "first_name": zod.string().max(trackerApiViewLocationListLocationsResponseUserFirstNameMax),
  "last_name": zod.string().max(trackerApiViewLocationListLocationsResponseUserLastNameMax)
})
})
export const trackerApiViewLocationListLocationsResponse = zod.array(trackerApiViewLocationListLocationsResponseItem)


/**
 * Location
 * @summary Create Location
 */
export const trackerApiViewLocationCreateLocationBody = zod.object({
  "name": zod.string()
})

export const trackerApiViewLocationCreateLocationResponseUserEmailMax = 254;
export const trackerApiViewLocationCreateLocationResponseUserFirstNameMax = 255;
export const trackerApiViewLocationCreateLocationResponseUserLastNameMax = 255;


export const trackerApiViewLocationCreateLocationResponse = zod.object({
  "name": zod.string(),
  "id": zod.string(),
  "user": zod.object({
  "email": zod.string().max(trackerApiViewLocationCreateLocationResponseUserEmailMax),
  "first_name": zod.string().max(trackerApiViewLocationCreateLocationResponseUserFirstNameMax),
  "last_name": zod.string().max(trackerApiViewLocationCreateLocationResponseUserLastNameMax)
})
})


/**
 * Location
 * @summary Get Location
 */
export const trackerApiViewLocationGetLocationParams = zod.object({
  "location_id": zod.string()
})

export const trackerApiViewLocationGetLocationResponseUserEmailMax = 254;
export const trackerApiViewLocationGetLocationResponseUserFirstNameMax = 255;
export const trackerApiViewLocationGetLocationResponseUserLastNameMax = 255;


export const trackerApiViewLocationGetLocationResponse = zod.object({
  "name": zod.string(),
  "id": zod.string(),
  "user": zod.object({
  "email": zod.string().max(trackerApiViewLocationGetLocationResponseUserEmailMax),
  "first_name": zod.string().max(trackerApiViewLocationGetLocationResponseUserFirstNameMax),
  "last_name": zod.string().max(trackerApiViewLocationGetLocationResponseUserLastNameMax)
})
})


/**
 * Location
 * @summary Patch Location
 */
export const locationPatchLocationParams = zod.object({
  "location_id": zod.string()
})

export const locationPatchLocationBody = zod.object({
  "name": zod.string()
})

export const locationPatchLocationResponseUserEmailMax = 254;
export const locationPatchLocationResponseUserFirstNameMax = 255;
export const locationPatchLocationResponseUserLastNameMax = 255;


export const locationPatchLocationResponse = zod.object({
  "name": zod.string(),
  "id": zod.string(),
  "user": zod.object({
  "email": zod.string().max(locationPatchLocationResponseUserEmailMax),
  "first_name": zod.string().max(locationPatchLocationResponseUserFirstNameMax),
  "last_name": zod.string().max(locationPatchLocationResponseUserLastNameMax)
})
})


/**
 * Location
 * @summary Delete Location
 */
export const trackerApiViewLocationDeleteLocationParams = zod.object({
  "location_id": zod.string()
})

export const trackerApiViewLocationDeleteLocationResponse = zod.object({
  "success": zod.boolean()
})


/**
 * Arean
 * @summary List Areas
 */
export const trackerApiViewAreaListAreasResponseLocationUserEmailMax = 254;
export const trackerApiViewAreaListAreasResponseLocationUserFirstNameMax = 255;
export const trackerApiViewAreaListAreasResponseLocationUserLastNameMax = 255;
export const trackerApiViewAreaListAreasResponseUserEmailMax = 254;
export const trackerApiViewAreaListAreasResponseUserFirstNameMax = 255;
export const trackerApiViewAreaListAreasResponseUserLastNameMax = 255;


export const trackerApiViewAreaListAreasResponseItem = zod.object({
  "name": zod.string(),
  "id": zod.string(),
  "location": zod.object({
  "name": zod.string(),
  "id": zod.string(),
  "user": zod.object({
  "email": zod.string().max(trackerApiViewAreaListAreasResponseLocationUserEmailMax),
  "first_name": zod.string().max(trackerApiViewAreaListAreasResponseLocationUserFirstNameMax),
  "last_name": zod.string().max(trackerApiViewAreaListAreasResponseLocationUserLastNameMax)
})
}),
  "user": zod.object({
  "email": zod.string().max(trackerApiViewAreaListAreasResponseUserEmailMax),
  "first_name": zod.string().max(trackerApiViewAreaListAreasResponseUserFirstNameMax),
  "last_name": zod.string().max(trackerApiViewAreaListAreasResponseUserLastNameMax)
})
})
export const trackerApiViewAreaListAreasResponse = zod.array(trackerApiViewAreaListAreasResponseItem)


/**
 * Area
 * @summary Create Area
 */
export const trackerApiViewAreaCreateAreaBody = zod.object({
  "name": zod.string(),
  "location_id": zod.string()
})

export const trackerApiViewAreaCreateAreaResponseLocationUserEmailMax = 254;
export const trackerApiViewAreaCreateAreaResponseLocationUserFirstNameMax = 255;
export const trackerApiViewAreaCreateAreaResponseLocationUserLastNameMax = 255;
export const trackerApiViewAreaCreateAreaResponseUserEmailMax = 254;
export const trackerApiViewAreaCreateAreaResponseUserFirstNameMax = 255;
export const trackerApiViewAreaCreateAreaResponseUserLastNameMax = 255;


export const trackerApiViewAreaCreateAreaResponse = zod.object({
  "name": zod.string(),
  "id": zod.string(),
  "location": zod.object({
  "name": zod.string(),
  "id": zod.string(),
  "user": zod.object({
  "email": zod.string().max(trackerApiViewAreaCreateAreaResponseLocationUserEmailMax),
  "first_name": zod.string().max(trackerApiViewAreaCreateAreaResponseLocationUserFirstNameMax),
  "last_name": zod.string().max(trackerApiViewAreaCreateAreaResponseLocationUserLastNameMax)
})
}),
  "user": zod.object({
  "email": zod.string().max(trackerApiViewAreaCreateAreaResponseUserEmailMax),
  "first_name": zod.string().max(trackerApiViewAreaCreateAreaResponseUserFirstNameMax),
  "last_name": zod.string().max(trackerApiViewAreaCreateAreaResponseUserLastNameMax)
})
})


/**
 * Area
 * @summary Get Area
 */
export const trackerApiViewAreaGetAreaParams = zod.object({
  "area_id": zod.string()
})

export const trackerApiViewAreaGetAreaResponseLocationUserEmailMax = 254;
export const trackerApiViewAreaGetAreaResponseLocationUserFirstNameMax = 255;
export const trackerApiViewAreaGetAreaResponseLocationUserLastNameMax = 255;
export const trackerApiViewAreaGetAreaResponseUserEmailMax = 254;
export const trackerApiViewAreaGetAreaResponseUserFirstNameMax = 255;
export const trackerApiViewAreaGetAreaResponseUserLastNameMax = 255;


export const trackerApiViewAreaGetAreaResponse = zod.object({
  "name": zod.string(),
  "id": zod.string(),
  "location": zod.object({
  "name": zod.string(),
  "id": zod.string(),
  "user": zod.object({
  "email": zod.string().max(trackerApiViewAreaGetAreaResponseLocationUserEmailMax),
  "first_name": zod.string().max(trackerApiViewAreaGetAreaResponseLocationUserFirstNameMax),
  "last_name": zod.string().max(trackerApiViewAreaGetAreaResponseLocationUserLastNameMax)
})
}),
  "user": zod.object({
  "email": zod.string().max(trackerApiViewAreaGetAreaResponseUserEmailMax),
  "first_name": zod.string().max(trackerApiViewAreaGetAreaResponseUserFirstNameMax),
  "last_name": zod.string().max(trackerApiViewAreaGetAreaResponseUserLastNameMax)
})
})


/**
 * Area
 * @summary Patch Area
 */
export const areaPatchAreaParams = zod.object({
  "area_id": zod.string()
})

export const areaPatchAreaBody = zod.object({
  "name": zod.string(),
  "location_id": zod.string()
})

export const areaPatchAreaResponseLocationUserEmailMax = 254;
export const areaPatchAreaResponseLocationUserFirstNameMax = 255;
export const areaPatchAreaResponseLocationUserLastNameMax = 255;
export const areaPatchAreaResponseUserEmailMax = 254;
export const areaPatchAreaResponseUserFirstNameMax = 255;
export const areaPatchAreaResponseUserLastNameMax = 255;


export const areaPatchAreaResponse = zod.object({
  "name": zod.string(),
  "id": zod.string(),
  "location": zod.object({
  "name": zod.string(),
  "id": zod.string(),
  "user": zod.object({
  "email": zod.string().max(areaPatchAreaResponseLocationUserEmailMax),
  "first_name": zod.string().max(areaPatchAreaResponseLocationUserFirstNameMax),
  "last_name": zod.string().max(areaPatchAreaResponseLocationUserLastNameMax)
})
}),
  "user": zod.object({
  "email": zod.string().max(areaPatchAreaResponseUserEmailMax),
  "first_name": zod.string().max(areaPatchAreaResponseUserFirstNameMax),
  "last_name": zod.string().max(areaPatchAreaResponseUserLastNameMax)
})
})


/**
 * Area
 * @summary Delete Area
 */
export const trackerApiViewAreaDeleteAreaParams = zod.object({
  "area_id": zod.string()
})

export const trackerApiViewAreaDeleteAreaResponse = zod.object({
  "success": zod.boolean()
})


/**
 * @summary New Token
 */
export const trackerApiViewUserNewTokenBodyPasswordMax = 128;
export const trackerApiViewUserNewTokenBodyEmailMax = 254;


export const trackerApiViewUserNewTokenBody = zod.object({
  "password": zod.string().max(trackerApiViewUserNewTokenBodyPasswordMax),
  "email": zod.string().max(trackerApiViewUserNewTokenBodyEmailMax)
})

export const trackerApiViewUserNewTokenResponseUserEmailMax = 254;
export const trackerApiViewUserNewTokenResponseUserFirstNameMax = 255;
export const trackerApiViewUserNewTokenResponseUserLastNameMax = 255;


export const trackerApiViewUserNewTokenResponse = zod.object({
  "access": zod.string(),
  "refresh": zod.string(),
  "user": zod.object({
  "email": zod.string().max(trackerApiViewUserNewTokenResponseUserEmailMax),
  "first_name": zod.string().max(trackerApiViewUserNewTokenResponseUserFirstNameMax),
  "last_name": zod.string().max(trackerApiViewUserNewTokenResponseUserLastNameMax)
})
})


/**
 * @summary Refresh Token
 */
export const trackerApiViewUserRefreshTokenBody = zod.object({
  "refresh": zod.string()
})

export const trackerApiViewUserRefreshTokenResponse = zod.object({
  "access": zod.string(),
  "refresh": zod.string()
})


/**
 * @summary Me
 */
export const trackerApiViewUserMeResponseEmailMax = 254;
export const trackerApiViewUserMeResponseFirstNameMax = 255;
export const trackerApiViewUserMeResponseLastNameMax = 255;


export const trackerApiViewUserMeResponse = zod.object({
  "email": zod.string().max(trackerApiViewUserMeResponseEmailMax),
  "first_name": zod.string().max(trackerApiViewUserMeResponseFirstNameMax),
  "last_name": zod.string().max(trackerApiViewUserMeResponseLastNameMax)
})


/**
 * @summary Update Me
 */
export const trackerApiViewUserUpdateMeBodyEmailMax = 254;
export const trackerApiViewUserUpdateMeBodyFirstNameMax = 255;
export const trackerApiViewUserUpdateMeBodyLastNameMax = 255;


export const trackerApiViewUserUpdateMeBody = zod.object({
  "email": zod.string().max(trackerApiViewUserUpdateMeBodyEmailMax),
  "first_name": zod.string().max(trackerApiViewUserUpdateMeBodyFirstNameMax),
  "last_name": zod.string().max(trackerApiViewUserUpdateMeBodyLastNameMax)
})

export const trackerApiViewUserUpdateMeResponseEmailMax = 254;
export const trackerApiViewUserUpdateMeResponseFirstNameMax = 255;
export const trackerApiViewUserUpdateMeResponseLastNameMax = 255;


export const trackerApiViewUserUpdateMeResponse = zod.object({
  "email": zod.string().max(trackerApiViewUserUpdateMeResponseEmailMax),
  "first_name": zod.string().max(trackerApiViewUserUpdateMeResponseFirstNameMax),
  "last_name": zod.string().max(trackerApiViewUserUpdateMeResponseLastNameMax)
})


/**
 * @summary Reg Enabled
 */
export const trackerApiViewUserRegEnabledResponse = zod.object({
  "enabled": zod.boolean()
})


/**
 * @summary Register
 */
export const trackerApiViewUserRegisterBody = zod.object({
  "email": zod.string(),
  "password": zod.string(),
  "password_verify": zod.string(),
  "first_name": zod.string(),
  "last_name": zod.string()
})

export const trackerApiViewUserRegisterResponseEmailMax = 254;
export const trackerApiViewUserRegisterResponseFirstNameMax = 255;
export const trackerApiViewUserRegisterResponseLastNameMax = 255;


export const trackerApiViewUserRegisterResponse = zod.object({
  "email": zod.string().max(trackerApiViewUserRegisterResponseEmailMax),
  "first_name": zod.string().max(trackerApiViewUserRegisterResponseFirstNameMax),
  "last_name": zod.string().max(trackerApiViewUserRegisterResponseLastNameMax)
})


/**
 * Plant
 * @summary List Plants
 */
export const trackerApiViewPlantListPlantsQueryParams = zod.object({
  "exclude_graveyard": zod.boolean().optional(),
  "graveyard_only": zod.boolean().optional()
})

export const trackerApiViewPlantListPlantsResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string(),
  "common_name": zod.string().or(zod.null()).optional(),
  "scientific_name": zod.string().or(zod.null()).optional(),
  "purchase_date": zod.string().date().or(zod.null()).optional(),
  "graveyard": zod.boolean().optional(),
  "death_date": zod.string().date().or(zod.null()).optional(),
  "main_photo": zod.string().or(zod.null()).optional(),
  "notes": zod.string().or(zod.null()).optional(),
  "area": zod.string().uuid(),
  "user": zod.string().uuid()
})
export const trackerApiViewPlantListPlantsResponse = zod.array(trackerApiViewPlantListPlantsResponseItem)


/**
 * Plant
 * @summary Create Plant
 */
export const trackerApiViewPlantCreatePlantResponse = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string(),
  "common_name": zod.string().or(zod.null()).optional(),
  "scientific_name": zod.string().or(zod.null()).optional(),
  "purchase_date": zod.string().date().or(zod.null()).optional(),
  "graveyard": zod.boolean().optional(),
  "death_date": zod.string().date().or(zod.null()).optional(),
  "main_photo": zod.string().or(zod.null()).optional(),
  "notes": zod.string().or(zod.null()).optional(),
  "area": zod.string().uuid(),
  "user": zod.string().uuid()
})


/**
 * Plant
 * @summary Get Plant
 */
export const trackerApiViewPlantGetPlantParams = zod.object({
  "plant_id": zod.string()
})

export const trackerApiViewPlantGetPlantResponse = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string(),
  "common_name": zod.string().or(zod.null()).optional(),
  "scientific_name": zod.string().or(zod.null()).optional(),
  "purchase_date": zod.string().date().or(zod.null()).optional(),
  "graveyard": zod.boolean().optional(),
  "death_date": zod.string().date().or(zod.null()).optional(),
  "main_photo": zod.string().or(zod.null()).optional(),
  "notes": zod.string().or(zod.null()).optional(),
  "area": zod.string().uuid(),
  "user": zod.string().uuid()
})


/**
 * Plant
 * @summary Post Plant
 */
export const trackerApiViewPlantPostPlantParams = zod.object({
  "plant_id": zod.string()
})

export const trackerApiViewPlantPostPlantResponse = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string(),
  "common_name": zod.string().or(zod.null()).optional(),
  "scientific_name": zod.string().or(zod.null()).optional(),
  "purchase_date": zod.string().date().or(zod.null()).optional(),
  "graveyard": zod.boolean().optional(),
  "death_date": zod.string().date().or(zod.null()).optional(),
  "main_photo": zod.string().or(zod.null()).optional(),
  "notes": zod.string().or(zod.null()).optional(),
  "area": zod.string().uuid(),
  "user": zod.string().uuid()
})


/**
 * Plant
 * @summary Delete Plant
 */
export const trackerApiViewPlantDeletePlantParams = zod.object({
  "plant_id": zod.string()
})

export const trackerApiViewPlantDeletePlantResponse = zod.object({
  "success": zod.boolean()
})


/**
 * Entry
 * @summary List Entries
 */
export const trackerApiViewEntryListEntriesResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "Timestamp": zod.string().datetime(),
  "plant": zod.string().uuid(),
  "notes": zod.string().or(zod.null()).optional(),
  "plant_health": zod.number(),
  "photo": zod.string().or(zod.null()).optional(),
  "user": zod.string().uuid(),
  "activities": zod.array(zod.string())
})
export const trackerApiViewEntryListEntriesResponse = zod.array(trackerApiViewEntryListEntriesResponseItem)


/**
 * Entry
 * @summary Create Entry
 */
export const trackerApiViewEntryCreateEntryResponse = zod.object({
  "id": zod.string().uuid().optional(),
  "Timestamp": zod.string().datetime(),
  "plant": zod.string().uuid(),
  "notes": zod.string().or(zod.null()).optional(),
  "plant_health": zod.number(),
  "photo": zod.string().or(zod.null()).optional(),
  "user": zod.string().uuid(),
  "activities": zod.array(zod.string())
})


/**
 * Entry
 * @summary Get Plant Entries
 */
export const trackerApiViewEntryGetPlantEntriesParams = zod.object({
  "plant_id": zod.string()
})

export const trackerApiViewEntryGetPlantEntriesResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "Timestamp": zod.string().datetime(),
  "plant": zod.string().uuid(),
  "notes": zod.string().or(zod.null()).optional(),
  "plant_health": zod.number(),
  "photo": zod.string().or(zod.null()).optional(),
  "user": zod.string().uuid(),
  "activities": zod.array(zod.string())
})
export const trackerApiViewEntryGetPlantEntriesResponse = zod.array(trackerApiViewEntryGetPlantEntriesResponseItem)


/**
 * Entry
 * @summary Get Entry
 */
export const trackerApiViewEntryGetEntryParams = zod.object({
  "entry_id": zod.string()
})

export const trackerApiViewEntryGetEntryResponse = zod.object({
  "id": zod.string().uuid().optional(),
  "Timestamp": zod.string().datetime(),
  "plant": zod.string().uuid(),
  "notes": zod.string().or(zod.null()).optional(),
  "plant_health": zod.number(),
  "photo": zod.string().or(zod.null()).optional(),
  "user": zod.string().uuid(),
  "activities": zod.array(zod.string())
})


/**
 * Entry
 * @summary Post Entry
 */
export const trackerApiViewEntryPostEntryParams = zod.object({
  "entry_id": zod.string()
})

export const trackerApiViewEntryPostEntryResponse = zod.object({
  "id": zod.string().uuid().optional(),
  "Timestamp": zod.string().datetime(),
  "plant": zod.string().uuid(),
  "notes": zod.string().or(zod.null()).optional(),
  "plant_health": zod.number(),
  "photo": zod.string().or(zod.null()).optional(),
  "user": zod.string().uuid(),
  "activities": zod.array(zod.string())
})


/**
 * Entry
 * @summary Delete Entry
 */
export const trackerApiViewEntryDeleteEntryParams = zod.object({
  "entry_id": zod.string()
})

export const trackerApiViewEntryDeleteEntryResponse = zod.object({
  "success": zod.boolean()
})


/**
 * Activity
 * @summary List Activities
 */
export const trackerApiViewActivityListActivitiesResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string(),
  "description": zod.string().or(zod.null()).optional()
})
export const trackerApiViewActivityListActivitiesResponse = zod.array(trackerApiViewActivityListActivitiesResponseItem)


/**
 * Bulk
 * @summary Bulk Create Plant
 */
export const trackerApiViewBulkBulkCreatePlantResponse = zod.object({
  "created": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string(),
  "common_name": zod.string().or(zod.null()).optional(),
  "scientific_name": zod.string().or(zod.null()).optional(),
  "purchase_date": zod.string().date().or(zod.null()).optional(),
  "graveyard": zod.boolean().optional(),
  "death_date": zod.string().date().or(zod.null()).optional(),
  "main_photo": zod.string().or(zod.null()).optional(),
  "notes": zod.string().or(zod.null()).optional(),
  "area": zod.string().uuid(),
  "user": zod.string().uuid()
})).optional(),
  "errors": zod.record(zod.string(), zod.string()).optional()
})


/**
 * Search plant records
 * @summary Search Plant
 */
export const trackerApiViewSearchSearchPlantQueryParams = zod.object({
  "query": zod.string().optional(),
  "graveyard_only": zod.boolean().optional(),
  "alive_only": zod.boolean().optional()
})

export const trackerApiViewSearchSearchPlantResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string(),
  "common_name": zod.string().or(zod.null()).optional(),
  "scientific_name": zod.string().or(zod.null()).optional(),
  "purchase_date": zod.string().date().or(zod.null()).optional(),
  "graveyard": zod.boolean().optional(),
  "death_date": zod.string().date().or(zod.null()).optional(),
  "main_photo": zod.string().or(zod.null()).optional(),
  "notes": zod.string().or(zod.null()).optional(),
  "area": zod.string().uuid(),
  "user": zod.string().uuid()
})
export const trackerApiViewSearchSearchPlantResponse = zod.array(trackerApiViewSearchSearchPlantResponseItem)


/**
 * Search entry records
 * @summary Search Entry
 */
export const trackerApiViewSearchSearchEntryQueryParams = zod.object({
  "query": zod.string().optional(),
  "graveyard_only": zod.boolean().optional(),
  "alive_only": zod.boolean().optional()
})

export const trackerApiViewSearchSearchEntryResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "Timestamp": zod.string().datetime(),
  "plant": zod.string().uuid(),
  "notes": zod.string().or(zod.null()).optional(),
  "plant_health": zod.number(),
  "photo": zod.string().or(zod.null()).optional(),
  "user": zod.string().uuid(),
  "activities": zod.array(zod.string())
})
export const trackerApiViewSearchSearchEntryResponse = zod.array(trackerApiViewSearchSearchEntryResponseItem)


